<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Daniel Martins</title><link>https://danielfm.me/post/</link><description>Recent content in Posts on Daniel Martins</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 Sep 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://danielfm.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Pain(less?) NGINX Ingress</title><link>https://danielfm.me/post/painless-nginx-ingress/</link><pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate><guid>https://danielfm.me/post/painless-nginx-ingress/</guid><description>So you have a Kubernetes cluster and are using (or considering using) the NGINX ingress controller to forward outside traffic to in-cluster services. That&amp;rsquo;s awesome!
The first time I looked at it, everything looked so easy; installing the NGINX ingress controller was one helm install away, so I did it. Then, after hooking up the DNS to the load balancer and creating a few Ingress resources, I was in business.</description></item><item><title>Five Months of Kubernetes</title><link>https://danielfm.me/post/five-months-of-kubernetes/</link><pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate><guid>https://danielfm.me/post/five-months-of-kubernetes/</guid><description>For the past year, Descomplica moved towards a more service-oriented architecture for its core components (auth, search, etc) and we&amp;rsquo;ve been using Elastic Beanstalk from the start to orchestrate the deployment of those services to AWS.
It was a good decision at the time. In general, Elastic Beanstalk works fine and has a very gentle learning curve; it didn&amp;rsquo;t take long for all teams to start using it for their projects.</description></item><item><title>A Week Of Docker</title><link>https://danielfm.me/post/a-week-of-docker/</link><pubDate>Fri, 15 Aug 2014 00:00:00 +0000</pubDate><guid>https://danielfm.me/post/a-week-of-docker/</guid><description>If you got here, the chances are you heard the fuss around Docker and how it&amp;rsquo;s supposed to change the way we deploy applications.
According to the official website, Docker is&amp;hellip;
&amp;hellip;a platform for developers and sysadmins to develop, ship, and run applications. Docker lets you quickly assemble applications from components and eliminates the friction that can come when shipping code. Docker lets you get your code tested and deployed into production as fast as possible.</description></item><item><title>Why Are Continuations So Darn Cool?</title><link>https://danielfm.me/post/why-are-continuations-cool/</link><pubDate>Thu, 05 Jun 2014 00:00:00 +0000</pubDate><guid>https://danielfm.me/post/why-are-continuations-cool/</guid><description>Continuations are the least understood of all control-flow constructs. This lack of understanding (or awareness) is unfortunate, given that continuations permit the programmer to implement powerful language features and algorithms.
&amp;ndash; Matt Might, in Continuations By Example
The usual way to control the flow of execution of a computer program is via procedure calls and returns; a stack data structure is how high-level programming languages keep track of the point to which each active subroutine should return control when it finishes executing.</description></item><item><title>Functional Programming 101 - With Clojure</title><link>https://danielfm.me/post/functional-programming-101-with-clojure/</link><pubDate>Sun, 26 Jan 2014 00:00:00 +0000</pubDate><guid>https://danielfm.me/post/functional-programming-101-with-clojure/</guid><description>Here goes a simple yet interesting programming problem originally proposed by Mattox Beckman. After seeing Tejas Dinkar&amp;rsquo;s take on this problem using Haskell, I decided to give it a go with Clojure.
You are Hercules, about to fight the dreaded Hydra. The Hydra has 9 heads. When a head is chopped off, it spawns 8 more heads. When one of these 8 heads is cut off, each one spawns out 7 more heads.</description></item><item><title>Learning From Data - Course Review</title><link>https://danielfm.me/post/learning-from-data/</link><pubDate>Sun, 03 Jun 2012 00:00:00 +0000</pubDate><guid>https://danielfm.me/post/learning-from-data/</guid><description>Machine learning students and practitioners looking for a solid foundation on the subject probably heard about Learning From Data, a real Caltech course taught by Professor Yaser Abu-Mostafa and broadcast live, for free.
As a contribution to this wonderful initiative, I gather here my impressions regarding some aspects of the course.
Prerequisites Basic probability, matrices, and calculus. According to the course website, this is all you need to know. I would add programming to that list though, since it&amp;rsquo;s necessary to write some tricky programs in order to answer to some questions.</description></item></channel></rss>